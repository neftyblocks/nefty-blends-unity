name: Deploy

on: [push]

jobs:
  pack-unitypackage:
    runs-on: ubuntu-20.04
    name: Unity Package Pack
    if: github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: unity_develop
          fetch-depth: 0
          token: ${{ secrets.FG_L_PAT2 }}
          submodules: recursive
      - name: Find all meta files
        run: |
          mkdir Assets
          mkdir $PKG_ROOT
          git mv AnchorLinkSharp $PKG_ROOT
          git mv AnchorLinkSharp.meta $PKG_ROOT
          git mv anchorlinktransportsharp $PKG_ROOT
          git mv anchorlinktransportsharp.meta $PKG_ROOT
          git mv eosiosigningrequestsharp $PKG_ROOT
          git mv eosiosigningrequestsharp.meta $PKG_ROOT
          git mv README.md $PKG_ROOT
          git mv README.md.meta $PKG_ROOT
          find $PKG_ROOT/ -name \*.meta >> metaList
        env:
          PKG_ROOT: Assets/AnchorLinkSharp
      - name: Make directory for our unity package
        run: mkdir a
      - name: Create Unity Package
        uses: pCYSl5EDgo/create-unitypackage@master
        with:
          package-path: 'a/anchorlinksharp.unitypackage'
          include-files: metaList
      - name: Upload package
        uses: actions/upload-artifact@v1
        with:
          name: a
          path: ./a

  release:
    runs-on: ubuntu-20.04
    needs: pack-unitypackage
    if: github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Determine version
        run: echo "VERSION=$(git describe --tags --dirty)" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1.12.0
        with:
          tag: 1.0.8
          name: Release 1.0.8
          body: ${{ env.VERSION }}
          makeLatest: true
      - name: Download unity package
        uses: actions/download-artifact@v1
        with:
          name: a
          path: ./a
      - name: Upload unity package to release
        uses: Fhwang0926/upload-release-asset@v1.1.17
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_name: a/anchorlinksharp.unitypackage # path + filename

  split-upm:
    needs: release
    name: Split UPM branch
    runs-on: ubuntu-20.04
    if: github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: unity_develop
          fetch-depth: 0
          token: ${{ secrets.FG_L_PAT2 }}
          submodules: recursive
      - name: split upm branch
        run: |
          git branch -d upm &> /dev/null || echo upm branch not found # recreate the upm branch each time
          echo "********************** ROOT **********************"
          ls
          git config --global user.name 'github-bot'
          git config --global user.email 'github-bot@users.noreply.github.com'
          git checkout -b upm                                            # checkout the branch
          git subtree add --prefix=temp/anchorlinktransportsharp anchorlinktransportsharp $(git rev-parse HEAD:anchorlinktransportsharp)
          git subtree add --prefix=temp/eosiosigningrequestsharp eosiosigningrequestsharp $(git rev-parse HEAD:eosiosigningrequestsharp)
          git rm .gitmodules
          git rm -rf anchorlinktransportsharp
          git rm -rf eosiosigningrequestsharp
          git add .
          git rm -r .github
          git commit -am "removed submodules and merged them to upm"
          mkdir anchorlinktransportsharp
          mkdir eosiosigningrequestsharp
          cp -r temp/anchorlinktransportsharp/. anchorlinktransportsharp
          cp -r temp/eosiosigningrequestsharp/. eosiosigningrequestsharp
          git rm -rf temp
          git rm -r .github || true
          git add .
          git commit -m "rearraged the files to their correct folder"
          git mv anchorlinktransportsharp/Examples anchorlinktransportsharp/Samples~
          git rm anchorlinktransportsharp/Examples.meta
          git commit -am "renamed examples to samples~"
          git push -u origin upm --force                              # commit the branch

        
